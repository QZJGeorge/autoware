#ifndef SPEEDCONTROL_H
#define SPEEDCONTROL_H

#include <sx.hpp>
#include <iostream>
#include <algorithm>
#include <math.h>
#include <rclcpp/rclcpp.hpp>

using namespace std;

#define SLOPE2PADEL (SC.acc_slope*(0.33-0.23)/(0.6*9.8))
#define VNUM    (61)
#define TNUM    (15)

float const SPEEDTABLE[VNUM]    = {0.200000, 0.500000, 1.000000, 1.500000, 2.000000, 2.500000, 3.000000, 3.500000, 4.000000, 4.500000, 5.000000, 5.500000, 6.000000, 6.500000, 7.000000, 7.500000, 8.000000, 8.500000, 9.000000, 9.500000, 10.000000, 10.500000, 11.000000, 11.500000, 12.000000, 12.500000, 13.000000, 13.500000, 14.000000, 14.500000, 15.000000, 15.500000, 16.000000, 16.500000, 17.000000, 17.500000, 18.000000, 18.500000, 19.000000, 19.500000, 20.000000, 20.500000, 21.000000, 21.500000, 22.000000, 22.500000, 23.000000, 23.500000, 24.000000, 24.500000, 25.000000, 25.500000, 26.000000, 26.500000, 27.000000, 27.500000, 28.000000, 28.500000, 29.000000, 29.500000, 30.000000};
float const THROTTLETABLE[TNUM] = {0.150000, 0.170000, 0.190000, 0.210000, 0.230000, 0.270000, 0.300000, 0.330000, 0.360000, 0.400000, 0.450000, 0.500000, 0.550000, 0.600000, 0.650000};

float const ACCTABLE[TNUM][VNUM]  = 
{
    {0.136078, 0.261714, 0.255132, 0.146239, 0.007069, -0.011189, -0.022378, -0.033567, -0.044756, -0.055944, -0.067133, -0.078322, -0.089511, -0.100700, -0.111889, -0.123078, -0.134267, -0.145456, -0.156644, -0.167833, -0.179022, -0.190211, -0.201400, -0.212589, -0.223778, -0.234967, -0.246156, -0.257344, -0.268533, -0.279722, -0.290911, -0.302100, -0.313289, -0.324478, -0.335667, -0.346856, -0.358044, -0.369233, -0.380422, -0.391611, -0.402800, -0.413989, -0.425178, -0.436367, -0.447556, -0.458744, -0.469933, -0.481122, -0.492311, -0.503500, -0.514689, -0.525878, -0.537067, -0.548256, -0.559444, -0.570633, -0.581822, -0.593011, -0.604200, -0.615389, -0.626578},
    {0.136413, 0.319105, 0.343041, 0.259537, 0.145700, 0.050146, 0.012178, -0.011189, -0.022378, -0.033567, -0.044756, -0.055944, -0.067133, -0.078322, -0.089511, -0.100700, -0.111889, -0.123078, -0.134267, -0.145456, -0.156644, -0.167833, -0.179022, -0.190211, -0.201400, -0.212589, -0.223778, -0.234967, -0.246156, -0.257344, -0.268533, -0.279722, -0.290911, -0.302100, -0.313289, -0.324478, -0.335667, -0.346856, -0.358044, -0.369233, -0.380422, -0.391611, -0.402800, -0.413989, -0.425178, -0.436367, -0.447556, -0.458744, -0.469933, -0.481122, -0.492311, -0.503500, -0.514689, -0.525878, -0.537067, -0.548256, -0.559444, -0.570633, -0.581822, -0.593011, -0.604200},
    {0.146497, 0.368729, 0.439130, 0.389253, 0.314599, 0.244614, 0.184753, 0.154141, 0.123106, 0.098212, 0.074978, 0.058184, 0.045297, 0.008164, -0.011189, -0.022378, -0.033567, -0.044756, -0.055944, -0.067133, -0.078322, -0.089511, -0.100700, -0.111889, -0.123078, -0.134267, -0.145456, -0.156644, -0.167833, -0.179022, -0.190211, -0.201400, -0.212589, -0.223778, -0.234967, -0.246156, -0.257344, -0.268533, -0.279722, -0.290911, -0.302100, -0.313289, -0.324478, -0.335667, -0.346856, -0.358044, -0.369233, -0.380422, -0.391611, -0.402800, -0.413989, -0.425178, -0.436367, -0.447556, -0.458744, -0.469933, -0.481122, -0.492311, -0.503500, -0.514689, -0.525878},
    {0.219884, 0.428577, 0.511588, 0.500380, 0.470659, 0.393788, 0.368365, 0.322685, 0.287688, 0.253543, 0.227890, 0.186244, 0.176294, 0.138840, 0.119271, 0.087294, 0.066189, 0.027017, -0.011189, -0.022378, -0.033567, -0.044756, -0.055944, -0.067133, -0.078322, -0.089511, -0.100700, -0.111889, -0.123078, -0.134267, -0.145456, -0.156644, -0.167833, -0.179022, -0.190211, -0.201400, -0.212589, -0.223778, -0.234967, -0.246156, -0.257344, -0.268533, -0.279722, -0.290911, -0.302100, -0.313289, -0.324478, -0.335667, -0.346856, -0.358044, -0.369233, -0.380422, -0.391611, -0.402800, -0.413989, -0.425178, -0.436367, -0.447556, -0.458744, -0.469933, -0.481122},
    {0.352655, 0.509121, 0.596831, 0.626726, 0.608353, 0.571293, 0.503487, 0.492959, 0.448125, 0.424240, 0.382656, 0.354394, 0.319278, 0.278070, 0.248514, 0.215079, 0.165288, 0.121029, 0.092057, 0.061734, 0.015351, -0.002898, -0.011189, -0.022378, -0.033567, -0.044756, -0.055944, -0.067133, -0.078322, -0.089511, -0.100700, -0.111889, -0.123078, -0.134267, -0.145456, -0.156644, -0.167833, -0.179022, -0.190211, -0.201400, -0.212589, -0.223778, -0.234967, -0.246156, -0.257344, -0.268533, -0.279722, -0.290911, -0.302100, -0.313289, -0.324478, -0.335667, -0.346856, -0.358044, -0.369233, -0.380422, -0.391611, -0.402800, -0.413989, -0.425178, -0.436367},
    {0.475008, 0.675422, 0.820994, 0.832532, 0.845334, 0.808472, 0.784235, 0.803401, 0.766339, 0.725106, 0.689973, 0.644183, 0.612170, 0.569512, 0.524536, 0.490049, 0.442379, 0.396760, 0.338773, 0.297683, 0.221374, 0.132781, 0.054602, -0.011189, -0.022378, -0.033567, -0.044756, -0.055944, -0.067133, -0.078322, -0.089511, -0.100700, -0.111889, -0.123078, -0.134267, -0.145456, -0.156644, -0.167833, -0.179022, -0.190211, -0.201400, -0.212589, -0.223778, -0.234967, -0.246156, -0.257344, -0.268533, -0.279722, -0.290911, -0.302100, -0.313289, -0.324478, -0.335667, -0.346856, -0.358044, -0.369233, -0.380422, -0.391611, -0.402800, -0.413989, -0.425178},
    {0.542549, 0.791201, 0.931487, 0.990299, 1.045546, 1.030146, 1.032200, 0.979155, 0.968288, 0.945295, 0.912139, 0.879534, 0.842225, 0.812236, 0.785035, 0.734778, 0.682498, 0.630793, 0.570732, 0.514408, 0.417286, 0.312731, 0.203691, 0.110595, 0.030350, -0.011189, -0.022378, -0.033567, -0.044756, -0.055944, -0.067133, -0.078322, -0.089511, -0.100700, -0.111889, -0.123078, -0.134267, -0.145456, -0.156644, -0.167833, -0.179022, -0.190211, -0.201400, -0.212589, -0.223778, -0.234967, -0.246156, -0.257344, -0.268533, -0.279722, -0.290911, -0.302100, -0.313289, -0.324478, -0.335667, -0.346856, -0.358044, -0.369233, -0.380422, -0.391611, -0.402800},
    {0.622102, 0.917174, 1.102806, 1.163009, 1.190829, 1.188410, 1.192087, 1.210240, 1.189763, 1.139673, 1.107302, 1.094092, 1.071976, 1.040820, 1.009892, 0.953523, 0.892819, 0.832114, 0.771409, 0.710705, 0.650000, 0.591667, 0.533333, 0.475000, 0.416667, 0.358333, 0.300000, 0.262500, 0.225000, 0.187500, 0.150000, 0.125000, 0.100000, 0.075000, 0.050000, 0.025000, 0.000000, -0.011189, -0.022378, -0.033567, -0.044756, -0.055944, -0.067133, -0.078322, -0.089511, -0.100700, -0.111889, -0.123078, -0.134267, -0.145456, -0.156644, -0.167833, -0.179022, -0.190211, -0.201400, -0.212589, -0.223778, -0.234967, -0.246156, -0.257344, -0.268533},
    {0.728758, 1.073863, 1.277996, 1.346593, 1.384758, 1.391567, 1.365271, 1.376269, 1.387840, 1.355024, 1.319727, 1.301447, 1.292483, 1.268966, 1.248061, 1.219736, 1.173690, 1.125706, 1.066789, 0.998587, 0.935044, 0.875162, 0.808755, 0.759485, 0.691738, 0.650637, 0.578753, 0.525186, 0.498678, 0.463938, 0.437433, 0.414465, 0.378327, 0.326556, 0.300000, 0.274366, 0.260924, 0.251515, 0.232969, 0.218357, 0.190298, 0.162723, 0.135149, 0.107574, 0.080000, 0.060000, 0.040000, 0.020000, 0.000000, -0.011189, -0.022378, -0.033567, -0.044756, -0.055944, -0.067133, -0.078322, -0.089511, -0.100700, -0.111889, -0.123078, -0.134267},
    {0.772550, 1.173281, 1.454412, 1.546077, 1.586814, 1.604834, 1.620334, 1.631807, 1.634881, 1.601405, 1.577233, 1.560461, 1.555699, 1.535718, 1.512172, 1.491904, 1.457028, 1.408877, 1.348959, 1.290727, 1.229321, 1.155055, 1.086468, 1.006343, 0.952742, 0.875391, 0.791151, 0.745654, 0.686375, 0.654015, 0.620686, 0.575230, 0.549220, 0.524131, 0.494587, 0.469194, 0.436969, 0.427015, 0.391847, 0.375718, 0.340712, 0.323147, 0.314001, 0.287369, 0.270602, 0.253835, 0.237068, 0.220301, 0.203534, 0.186767, 0.170000, 0.153000, 0.136000, 0.119000, 0.102000, 0.085000, 0.068000, 0.051000, 0.034000, 0.017000, 0.000000},
    {0.714774, 1.228848, 1.673294, 1.801485, 1.857505, 1.894104, 1.925440, 1.935414, 1.941262, 1.910914, 1.883391, 1.869553, 1.882885, 1.872615, 1.870816, 1.854887, 1.822142, 1.775426, 1.725527, 1.665072, 1.592913, 1.520543, 1.435781, 1.352174, 1.263595, 1.165566, 1.098399, 1.031035, 0.983341, 0.929971, 0.867772, 0.829297, 0.802823, 0.747355, 0.713475, 0.678181, 0.644006, 0.623950, 0.593298, 0.565195, 0.536893, 0.522828, 0.486445, 0.462810, 0.441764, 0.434672, 0.424344, 0.403620, 0.382896, 0.362172, 0.341448, 0.320724, 0.300000, 0.277500, 0.255000, 0.232500, 0.210000, 0.187500, 0.165000, 0.142500, 0.120000},
    {0.843734, 1.333250, 1.805104, 2.067401, 2.207619, 2.259757, 2.260146, 2.264064, 2.259515, 2.262695, 2.245787, 2.235734, 2.226962, 2.233515, 2.224612, 2.210682, 2.178567, 2.133000, 2.070024, 1.999510, 1.919104, 1.830436, 1.750094, 1.654644, 1.557973, 1.455624, 1.356592, 1.294636, 1.228540, 1.142691, 1.108220, 1.053948, 1.009296, 0.955206, 0.923154, 0.884113, 0.855140, 0.818903, 0.789670, 0.755608, 0.714972, 0.693073, 0.676438, 0.631684, 0.638639, 0.596777, 0.580537, 0.576413, 0.542959, 0.522957, 0.498638, 0.474319, 0.450000, 0.425000, 0.400000, 0.375000, 0.350000, 0.325000, 0.300000, 0.275000, 0.250000},
    {0.850717, 1.456204, 2.035694, 2.306143, 2.416029, 2.473712, 2.517596, 2.548541, 2.563755, 2.567966, 2.561594, 2.558620, 2.549656, 2.543100, 2.543615, 2.539258, 2.516822, 2.473914, 2.415081, 2.344349, 2.262478, 2.171274, 2.071510, 1.971435, 1.862269, 1.750910, 1.657174, 1.580214, 1.496500, 1.450768, 1.394293, 1.317661, 1.282265, 1.225758, 1.162234, 1.115999, 1.077682, 1.034930, 0.990049, 0.948902, 0.915130, 0.898171, 0.877520, 0.836821, 0.809804, 0.761830, 0.729551, 0.730368, 0.696781, 0.673867, 0.628074, 0.615815, 0.601929, 0.581447, 0.560964, 0.540482, 0.520000, 0.495000, 0.470000, 0.445000, 0.420000},
    {0.863521, 1.514533, 2.194538, 2.535169, 2.661485, 2.714772, 2.744952, 2.768134, 2.791598, 2.810068, 2.815515, 2.813589, 2.805773, 2.795152, 2.783614, 2.771058, 2.755353, 2.731956, 2.690714, 2.638253, 2.575334, 2.503159, 2.430053, 2.347305, 2.259866, 2.176650, 2.090939, 2.015513, 1.949529, 1.891690, 1.819164, 1.770138, 1.707447, 1.632441, 1.592752, 1.548691, 1.491069, 1.453521, 1.417737, 1.380975, 1.338735, 1.302240, 1.266367, 1.224731, 1.169477, 1.116230, 1.080936, 1.035245, 0.999419, 0.968456, 0.936130, 0.927123, 0.868539, 0.827109, 0.790389, 0.755195, 0.720000, 0.685000, 0.650000, 0.615000, 0.580000},
    {0.865604, 1.549584, 2.281338, 2.695633, 2.884301, 2.949964, 2.987499, 3.010495, 3.032568, 3.044971, 3.038528, 3.021409, 3.026359, 3.031244, 3.031373, 3.040384, 3.011705, 2.960998, 2.886232, 2.786089, 2.673679, 2.590117, 2.524490, 2.480498, 2.448269, 2.415544, 2.380862, 2.352659, 2.335152, 2.305971, 2.252259, 2.192819, 2.138884, 2.080372, 2.001188, 1.949832, 1.918121, 1.867126, 1.812544, 1.764748, 1.725832, 1.685647, 1.640537, 1.590621, 1.541287, 1.480645, 1.442439, 1.395809, 1.343218, 1.287263, 1.234207, 1.189539, 1.116923, 1.067159, 1.046869, 0.998884, 0.949256, 0.899628, 0.850000, 0.805000, 0.760000}
};

float const BRAKETABLE[6][2] = //opening command,torque
{
        {0.184, 0.0},
        {0.208, 108},
        {0.211, 519},
        {0.234, 600},
        {0.283, 1832},
        {0.323, 3316}
};

// a point
struct Point_X
{    
    float x =0;
    float y = 0;
    float z = 0;
    float slope = 0;
};

// data definition for speed control
struct SpeedControl_S
{
    int controler       = 1;

    float acc_slope     = 0;

    float speed_x       = 0.0f;
    float vd            = 0.0f;
    float vErr          = 0.0f;
    
    float brake_cmd     = 0.0f; 
    float throttle_cmd  = 0.0f;
    int   gear_cmd      = 0;
    float acc_cmd       = 0.0f;

    float errIntg       = 0.0f;
    float speedFB       = 0.0f;
    float accFB         = 0.0f;
    float speedPrev     = 0.0f;
    float slopePrev     = 0.0f;
    float acc_max_barr  = 0.0f;
};
 

class SpeedControl
{

public:
    SpeedControl() {};
    ~SpeedControl() {};
    void ini(Plan_Rlt_S * const planning2control_msg,
        VehState_S * const vehicle_state,
        Control_Value_S * const control_output,
        float pid_kp_, 
        float pid_ki_,
        int frequence_);

    int  run();
    void set_stop();
    void setestop_level_high();
    void setestop_level_medium();
    void setestop_level_low();

    SpeedControl_S SC;

private:
    float speed_pid_ctrl();
    void  get_padel_opening(float acc, float speed, float & throttle, float & brake);
    float cal_brake_pedal_opening(float deceleration);    
    float cal_road_load(float vehicle_speed);

    float brake_prev = 0;

    Plan_Rlt_S * _p2c  = NULL;
    VehState_S * _vs   = NULL;
    Control_Value_S * _ctrl = NULL;

    float pid_kp = 0.f;
    float pid_ki  = 0.f;
    int frequence = 50;

    long stopTimeCount = 0;
    long count = 0;
};

#endif